<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:sec="http://www.springframework.org/schema/security"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="
      http://www.springframework.org/schema/tx
      http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
      http://www.springframework.org/schema/context
      http://www.springframework.org/schema/context/spring-context-3.0.xsd
      http://www.springframework.org/schema/aop
      http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
      http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
      http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.0.xsd">

    <context:annotation-config/>
	
	<tx:annotation-driven transaction-manager="platformTransactionManager" order="200"/>
	
    <bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean" destroy-method="destroy">
        <property name="dataSource" ref="dataSource"/>
        <property name="configLocations">
          <list>
              <value>classpath:org/mifos/platform/questionnaire/domain/questionnaire_hibernate.cfg.xml</value>
              <value>classpath:org/mifos/config/resources/hibernate.cfg.xml</value>
          </list>
        </property>
        <property name="hibernateProperties">
            <ref bean="dbSpecificHibernateProperties"/>
        </property>
        <property name="namingStrategy">
            <ref bean="namingStrategy"/>
        </property>
    </bean>

    <bean id="namingStrategy" class="org.hibernate.cfg.ImprovedNamingStrategy"/>

    <bean id="platformTransactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
        <property name="sessionFactory">
            <ref local="sessionFactory"/>
        </property>
    </bean>

    <tx:advice id="txAdvice" transaction-manager="platformTransactionManager">
        <tx:attributes>
            <!-- all methods starting with 'get', 'find', 'list', 'iterate', 'retrieve' are read-only -->
            <tx:method name="get*" read-only="true"/>
            <tx:method name="find*" read-only="true"/>
            <tx:method name="list*" read-only="true"/>
            <tx:method name="retrieve*" read-only="true"/>
            <tx:method name="*" rollback-for="java.lang.Exception"/>
            <!-- other methods use the default transaction settings (see below) -->
            <tx:method name="*"/>
        </tx:attributes>
    </tx:advice>
    <!-- ensure that the above transactional advice runs for any execution
         of an operation defined by the ServiceService interface -->
    <aop:config>
        <aop:pointcut id="mifosServiceOperation" expression="execution(* org.mifos.platform..*ServiceFacade.*(..))"/>
        <aop:advisor advice-ref="txAdvice" pointcut-ref="mifosServiceOperation"/>
    </aop:config>

    <bean id="queryInterceptor" class="org.mifos.platform.persistence.QueryIntroductionInterceptor"/>
    <bean id="queryIntroductionAdvisor" class="org.mifos.platform.persistence.QueryIntroductionAdvisor">
        <constructor-arg ref="queryInterceptor"/>
    </bean>

    <bean id="abstractDaoTarget" class="org.mifos.platform.persistence.support.GenericDaoHibernateImpl" abstract="true">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <bean id="abstractDao" class="org.springframework.aop.framework.ProxyFactoryBean" abstract="true">
        <property name="interceptorNames">
            <list>
                <value>queryIntroductionAdvisor</value>
            </list>
        </property>
    </bean>
</beans>
